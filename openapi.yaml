openapi: 3.0.0
info:
  title: Alpha5 Documentation
  version: 1.0.0
  description: "Rest api spec"

servers:
  - description: test server
    url: https://domain.com/api/v1

security:
  - SignatureHeader: []
    TimestampHeader: []
    ApiKeyHeader: []
  - BearerAuth: []

paths:
  /public/get_assets:
    get:
      security: []
      summary: Get assets
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetList"

      tags:
        - Public
  /public/get_live_contracts:
    get:
      security: []
      parameters:
        - name: asset
          description: The asset symbol
          explode: true
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/AssetSymbol"
          style: form
        - name: type
          description: Contrat type
          explode: true
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/ContractType"
          style: form
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Contract"
      summary: Get contracts
      tags:
        - Public
  /public/spot_price:
    get:
      security: []
      parameters:
        - name: contract_symbol
          description: Contract symbol
          explode: true
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/ContractSymbol"
          style: form
      responses:
        200:
          description: A contract ticker
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpotPrice"
      summary: Get index price
      tags:
        - Public
  /public/mark_price:
    get:
      security: []
      parameters:
        - name: contract_symbol
          description: Contract symbol
          explode: true
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/ContractSymbol"
          style: form
      responses:
        200:
          description: A contract ticker
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarkPrice"
      summary: Get mark price
      tags:
        - Public

  /public/ticker:
    get:
      security: []
      parameters:
        - name: contract_symbol
          description: Contract symbol
          explode: true
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/ContractSymbol"
          style: form
      responses:
        200:
          description: A contract ticker
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticker"
      summary: Get ticker
      tags:
        - Public
  /public/order_book:
    get:
      security: []
      parameters:
        - name: contract_symbol
          description: Symbol of contract
          explode: true
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/ContractSymbol"
          style: form
        - name: depth
          in: query
          description: The number of entries to return for buy and sell side
          required: false
          explode: true
          schema:
            $ref: "#/components/schemas/Depth"
          style: form
      responses:
        200:
          description: A state of contract orderbook
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orderbook"
      summary: Orderbook
      tags:
        - Public
  /public/get_ohlc:
    get:
      security: []
      parameters:
        - name: contract_symbol
          description: Symbol of contract
          explode: true
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/ContractSymbol"
          style: form
        - name: resolution
          in: query
          description: The number of entries to return for buy and sell side
          required: true
          explode: true
          schema:
            $ref: "#/components/schemas/Resolution"
          style: form
        - name: from
          in: query
          description: The number of entries to return for buy and sell side
          required: true
          explode: true
          schema:
            type: integer
            example: 1593185692
          style: form
        - name: to
          in: query
          description: The number of entries to return for buy and sell side
          required: true
          explode: true
          schema:
            type: integer
            example: 1593185692
          style: form
      responses:
        200:
          description: OHLC data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ohlc"
      summary: OHLC data
      tags:
        - Public
  /public/recent_trades:
    get:
      security: []
      parameters:
        - name: contract_symbol
          description: Symbol of contract
          explode: true
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/ContractSymbol"
          style: form
        - name: count
          description: Number of requested items, default - `10`
          explode: true
          in: query
          required: false
          style: form
          schema:
            type: number
      responses:
        "200":
          description: A list of trades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecentTrade"
      summary: Recent Trades
      tags:
        - Public

  /account/place_order:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contract_symbol
                - size
                - side
              properties:
                contract_symbol:
                  allOf:
                    - $ref: "#/components/schemas/ContractSymbol"
                side:
                  allOf:
                    - $ref: "#/components/schemas/Side"
                type:
                  anyOf:
                    - $ref: "#/components/schemas/OrderType"
                  type: string
                  example: "limit"
                  default: "limit"
                size:
                  allOf:
                    - $ref: "#/components/schemas/Decimal"
                  example: "2.3"
                price:
                  allOf:
                    - $ref: "#/components/schemas/Decimal"
                  example: "9412.22"
                stop_price:
                  allOf:
                    - $ref: "#/components/schemas/Decimal"
                  example: "9522.12"
                time_in_force:
                  allOf:
                    - $ref: "#/components/schemas/TimeInForce"
                client_order_id:
                  allOf:
                    - $ref: "#/components/schemas/ClientOrderId"
                post_only:
                  type: boolean
                  default: false
                  description:
                    <p>If true, the order is considered post-only. If the new price
                    would cause the order to be filled immediately (as taker), the price will
                    be changed to be just below the bid.</p> <p>Only valid in combination with
                    time_in_force=`"good_til_cancelled"`</p>
                reduce_only:
                  type: boolean
                  default: false
                  description:
                    If `true`, the order is considered reduce-only which is intended
                    to only reduce a current position
                stop_trigger:
                  allOf:
                    - $ref: "#/components/schemas/StopOrderTrigger"
                  description: Trigger type (Only for stop orders)
      responses:
        "200":
          description: An order response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      summary: Place Order
      tags:
        - Trading

  /account/place_batch_orders:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - batch_orders
              properties:
                batch_orders:
                  type: array
                  items:
                    type: object
                    required:
                      - contract_symbol
                      - size
                      - side
                    properties:
                      contract_symbol:
                        allOf:
                          - $ref: "#/components/schemas/ContractSymbol"
                      side:
                        allOf:
                          - $ref: "#/components/schemas/Side"
                      type:
                        anyOf:
                          - $ref: "#/components/schemas/OrderType"
                        type: string
                        example: "limit"
                        default: "limit"
                      size:
                        allOf:
                          - $ref: "#/components/schemas/Decimal"
                        example: "2.3"
                      price:
                        allOf:
                          - $ref: "#/components/schemas/Decimal"
                        example: "9412.22"

                      time_in_force:
                        allOf:
                          - $ref: "#/components/schemas/TimeInForce"
                      client_order_id:
                        allOf:
                          - $ref: "#/components/schemas/ClientOrderId"
                      post_only:
                        type: boolean
                        default: false
                        description:
                          <p>If true, the order is considered post-only. If the new price
                          would cause the order to be filled immediately (as taker), the price will
                          be changed to be just below the bid.</p> <p>Only valid in combination with
                          time_in_force=`"good_til_cancelled"`</p>
                      reduce_only:
                        type: boolean
                        default: false
                        description:
                          If `true`, the order is considered reduce-only which is intended
                          to only reduce a current position
                      # stop_price:
                      #   allOf:
                      #     - $ref: "#/components/schemas/Decimal"
                      #   example: "9522.12"
                      # stop_trigger:
                      #   allOf:
                      #     - $ref: "#/components/schemas/StopOrderTrigger"
                      #   description: Trigger type (Only for stop orders)



      responses:
        "200":
          description: Place batch orders for a contract.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref:   "#/components/schemas/Order"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      summary:  Place batch orders
      tags:
        - Trading

  /account/edit_order:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - order_id
              properties:
                order_id:
                  allOf:
                    - $ref: "#/components/schemas/UUID"
                client_order_id:
                  allOf:
                    - $ref: "#/components/schemas/ClientOrderId"
                size:
                  allOf:
                    - $ref: "#/components/schemas/Decimal"
                  example: "2.3"
                price:
                  allOf:
                    - $ref: "#/components/schemas/Decimal"
                  example: "9412.22"
      responses:
        "200":
          description: An edit order response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      summary: Replace order
      tags:
        - Trading

  /account/edit_batch_orders:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - batch_orders
              properties:
                batch_orders:
                  type: array
                  items:
                    type: object
                    required:
                      - order_id
                    properties:
                      order_id:
                        allOf:
                          - $ref: "#/components/schemas/UUID"
                      client_order_id:
                        allOf:
                          - $ref: "#/components/schemas/ClientOrderId"
                      size:
                        allOf:
                          - $ref: "#/components/schemas/Decimal"
                        example: "2.3"
                      price:
                        allOf:
                          - $ref: "#/components/schemas/Decimal"
                        example: "9412.22"
      responses:
        "200":
          description: Edit batch orders for a contract.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref:   "#/components/schemas/Order"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      summary: Edit batch orders
      tags:
        - Trading


  /account/edit_bulk_orders:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - bulk_orders
              properties:
                bulk_orders:
                  type: array
                  items:
                    type: object
                    required:
                      - order_id
                    properties:
                      order_id:
                        allOf:
                          - $ref: "#/components/schemas/UUID"
                      client_order_id:
                        allOf:
                          - $ref: "#/components/schemas/ClientOrderId"
                      size:
                        allOf:
                          - $ref: "#/components/schemas/Decimal"
                        example: "2.3"
                      price:
                        allOf:
                          - $ref: "#/components/schemas/Decimal"
                        example: "9412.22"
      responses:
        "200":
          description: Edit bulk orders for a contract.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref:   "#/components/schemas/Order"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      summary: Edit bulk orders
      tags:
        - Trading

  /account/get_open_orders:
    get:
      parameters:
        - name: contract_symbol
          description: Contract unique symbol
          explode: true
          in: query
          required: false
          schema:
            allOf:
              - $ref: "#/components/schemas/ContractSymbol"
          style: form
        - name: contract_type
          description: Contract types
          explode: true
          in: query
          required: false
          schema:
            allOf:
              - $ref: "#/components/schemas/ContractType"
          style: form
        - name: order_type
          description: Order types
          explode: true
          in: query
          required: false
          schema:
            allOf:
              - $ref: "#/components/schemas/OrderType"
          style: form
        - $ref: "#/components/parameters/ToParam"
        - $ref: "#/components/parameters/FromParam"
      responses:
        "200":
          description: A list of orders
          headers:
            X-Pagination-To:
              $ref: "#/components/headers/X-Pagination-To"
            X-Pagination-From:
              $ref: "#/components/headers/X-Pagination-From"
            X-Pagination-Has-More:
              $ref: "#/components/headers/X-Pagination-Has-More"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
      summary: Get open orders
      tags:
        - Trading

  /account/cancel_order:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - order_id
              properties:
                order_id:
                  allOf:
                    - $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: An order cancellation response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      summary: Cancel order
      tags:
        - Trading

  /account/cancel_batch_orders:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - batch_orders
              properties:
                batch_orders:
                  type: array
                  items:
                    type: object
                    required:
                        - order_id
                    properties:
                      order_id:
                        allOf:
                          - $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: Cancel batch orders, specified by order ids.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref:   "#/components/schemas/Order"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      summary:  Cancel batch orders
      tags:
        - Trading

  /account/cancel_all_open_orders:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contract_symbol
              properties:
                contract_symbol:
                  description: Contract unique symbol
                  allOf:
                    - $ref: "#/components/schemas/ContractSymbol"
      responses:
        "200":
          description: Canceled order ids.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref:   "#/components/schemas/UUID"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      summary: Cancel all open orders
      tags:
        - Trading

  /account/get_positions:
    get:
      parameters:
        - name: account_type
          description: The account type
          explode: true
          in: query
          required: true
          style: form
          schema:
            allOf:
              - $ref: "#/components/schemas/AccountType"
        - name: contract_symbol
          description: Contract unique symbol
          explode: true
          in: query
          required: false
          schema:
            allOf:
              - $ref: "#/components/schemas/ContractSymbol"
          style: form
      responses:
        "200":
          description: A list of positions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      summary: Get positions
      tags:
        - Trading

  /account/close_position:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contract_symbol
              properties:
                contract_symbol:
                  allOf:
                    - $ref: "#/components/schemas/ContractSymbol"
                price:
                  allOf:
                    - $ref: "#/components/schemas/Decimal"
      responses:
        "200":
          description: A close position response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Position"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      summary: Close position
      tags:
        - Trading

  /account/close_all_positions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - account_type
              properties:
                contract_type:
                  allOf:
                    - $ref: "#/components/schemas/ContractType"
                account_type:
                  allOf:
                    - $ref: "#/components/schemas/AccountType"
      responses:
        "200":
            $ref: "#/components/responses/Success"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      summary: Close all positions
      tags:
        - Trading

  /account/get_user_trades:
    get:
      parameters:
        - name: contract_symbol
          description: Contract unique symbol
          explode: true
          in: query
          required: false
          schema:
            allOf:
              - $ref: "#/components/schemas/ContractSymbol"
          style: form
        - description: The order id
          explode: true
          in: query
          name: order_id
          required: false
          style: form
          schema:
            $ref: "#/components/schemas/UUID"
        - $ref: "#/components/parameters/ToParam"
        - $ref: "#/components/parameters/FromParam"
      responses:
        "200":
          description: A list of trades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserTrade"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      summary: Get user trades
      tags:
        - Trading

  /account/get_order_history:
    get:
      parameters:
        - name: contract_symbol
          description: Contract symbol
          explode: true
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/ContractSymbol"
          style: form
        - name: contract_type
          description: Contract types
          explode: true
          in: query
          required: false
          schema:
            allOf:
              - $ref: "#/components/schemas/ContractType"
          style: form
        - $ref: "#/components/parameters/ToParam"
        - $ref: "#/components/parameters/FromParam"
      responses:
        "200":
          description: A list of orders
          headers:
            X-Pagination-To:
              $ref: "#/components/headers/X-Pagination-To"
            X-Pagination-From:
              $ref: "#/components/headers/X-Pagination-From"
            X-Pagination-Has-More:
              $ref: "#/components/headers/X-Pagination-Has-More"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
      summary: Order history
      tags:
        - Trading

  /account/get_order_status:
    get:
      parameters:
        - name: client_order_id
          description: Client order identificator
          explode: true
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/UUID"
          style: form
        - name: order_id
          description: Unique order identificator
          explode: true
          in: query
          required: false
          schema:
            allOf:
              - $ref: "#/components/schemas/UUID"
          style: form
      responses:
        "200":
          description: An order response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      summary: Order status
      tags:
        - Trading


components:
  headers:
    X-Pagination-To:
      schema:
        type: integer
      description: max timestamp in response
    X-Pagination-From:
      schema:
        type: integer
      description: min timestamp in response
    X-Pagination-Has-More:
      schema:
        type: boolean
      description: has more before from

  parameters:
    FromParam:
      name: from
      in: query
      description: From Timestamp
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
        format: int32
    ToParam:
      name: to
      in: query
      description: To Timestamp
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
        format: int32

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

    SignatureHeader:
      type: apiKey
      in: header
      name: signature

    TimestampHeader:
      type: apiKey
      in: header
      name: timestamp

    ApiKeyHeader:
      type: apiKey
      in: header
      name: api-key

  schemas:
    Resolution:
      type: string
      enum:
        - M1
        - M2
        - M3
        - M5
        - M15
        - M30
        - M60
        - M90
        - M120
        - M240
        - M360
        - H1
        - H2
        - H3
        - H6
        - H24
        - D1
        - D7
        - D30
        - W1
        - W2
        - W4
      description: Resolution
      example: M1

    Depth:
      type: number
      minimum: 1
      maximum: 100
      example: 20
      description: The number of entries to return for buy and sell side, in - `1..100`

    Timestamp:
      type: number
      example: 1592828815073
      description: "Unix millisecond timestamp"

    UUID:
      type: string
      example: d25c9454-b488-11ea-b3de-0242ac130004
      description: Unique identifier

    ClientOrderId:
      type: string
      example: d25c9454-b488-11ea-b3de-0242ac130004
      description: identifier

    Decimal:
      type: string
      example: "10.000"
      description: "Decimal number represented as string"

    DateTime:
      type: string
      example: "2020-06-22T18:17:58Z"

    AssetSymbol:
      type: string
      description: Unique asset identifier
      example: USDT

    SpotSymbol:
      type: string
      description: Unique spot market identifier
      example: ETHUSDT

    ContractSymbol:
      type: string
      description: Unique contract identifier
      example: BTC-M20

    Side:
      type: string
      x-enumNames:
        - buy
        - sell
      enum:
        - buy
        - sell
      description: Side
      example: buy

    TradeRole:
      type: string
      x-enumNames:
        - maker
        - taker
      enum:
        - maker
        - taker
      description: TradeRole
      example: maker

    ContractType:
      type: string
      enum:
        - futures
        - perpetual_futures
        - spread_futures
        - options
        - spots
      description: Type of contract
      example: future

    ContractStatus:
      type: string
      enum:
        - operational
        - disrupted
        - disrupted_post_only
        - expired
      example: operational
      description: Status of contract

    OrderType:
      type: string
      enum:
        - limit
        - market
      example: limit
      description: Type of order

    OrderStatus:
      type: string
      enum:
        - open
        - filled
      example: limit
      description: Type of order

    StopOrderType:
      type: string
      enum:
        - stop_loss
        - take_profit
      description: Type of stop order
      example: stop_loss

    StopOrderTrigger:
      type: string
      enum:
        - index_price
        - mark_price
        - last_price
      description: Trigger for stop order
      example: mark_price

    TimeInForce:
      type: string
      enum:
        - good_til_cancelled
        - fill_or_kill
        - immediate_or_cancel
      example: good_til_cancelled

    TimeInForceResp:
      type: string
      enum:
        - gtc
        - fok
        - ioc
      example: gtc

    AccountType:
      type: string
      enum:
        - futures
        - spots
        - options
      description: Type of account
      example: futures

    Ohlc:
      type: object
      properties:
        opens:
          type: array
          items:
            $ref: "#/components/schemas/Decimal"
        highs:
          type: array
          items:
            $ref: "#/components/schemas/Decimal"
        lows:
          type: array
          items:
            $ref: "#/components/schemas/Decimal"
        closes:
          type: array
          items:
            $ref: "#/components/schemas/Decimal"
        sizes:
          type: array
          items:
            $ref: "#/components/schemas/Decimal"
        timestamps:
          type: array
          items:
            type: integer

    PricePoint:
      type: object
      properties:
        price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "9200.23"
        size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "779.34"
        total_size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "8734.84"

    Asset:
      type: object
      properties:
        symbol:
          $ref: "#/components/schemas/AssetSymbol"
        precision:
          example: 8
          type: number

    AssetList:
      type: array
      items:
        $ref: "#/components/schemas/Asset"

    Contract:
      type: object
      properties:
        symbol:
          $ref: "#/components/schemas/ContractSymbol"
        description:
          example: BTC-June
          type: string
        type:
          $ref: "#/components/schemas/ContractType"
        tick_size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.5"
        contract_size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.5"
        impact_size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.5"
        status:
          $ref: "#/components/schemas/ContractStatus"
        initial_margin:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.04"
        maintainance_margin:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.02"
        default_leverage:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.01"
        maker_comission_rate:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.02"
        taker_comission_rate:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.05"
        max_leverage_notional:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.02"
        volatility_threshold:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.0002"
        position_size_limit:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "1000.00"
        auction_start_time:
          type: string
          format: date-time
          description: Auction start time
        auction_finish_time:
          type: string
          format: date-time
          description: Auction finish time
        settlement_time:
          type: string
          format: date-time
          description: Settle time
        underlying_asset:
          $ref: "#/components/schemas/Asset"
        quoting_asset:
          $ref: "#/components/schemas/Asset"
        settling_asset:
          $ref: "#/components/schemas/Asset"

    SpotPrice:
      type: object
      properties:
        contract_id:
          allOf:
            - $ref: "#/components/schemas/UUID"
        contract_symbol:
          $ref: "#/components/schemas/ContractSymbol"
        spot_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
        timestamp:
          allOf:
            - $ref: "#/components/schemas/Decimal"

    MarkPrice:
      type: object
      properties:
        contract_id:
          allOf:
            - $ref: "#/components/schemas/UUID"
        contract_symbol:
          $ref: "#/components/schemas/ContractSymbol"
        mark_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
        timestamp:
          allOf:
            - $ref: "#/components/schemas/Decimal"

    Ticker:
      type: object
      properties:
        current_funding_rate:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.002"
        index_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "9100.00"
        last_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "9000.00"
        mark_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "9050.00"
        predictive_funding_rate:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.002"
        premium_index:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.002"
        open:
          allOf:
            - $ref: "#/components/schemas/Decimal"
        high:
          allOf:
            - $ref: "#/components/schemas/Decimal"
        low:
          allOf:
            - $ref: "#/components/schemas/Decimal"
        close:
          allOf:
            - $ref: "#/components/schemas/Decimal"
        size:
          allOf:
            - $ref: "#/components/schemas/Decimal"

        next_funding_time:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
          description: Next funding time
        timestamp:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
          description: Trade timestamp
    Orderbook:
      type: object
      properties:
        depth:
          allOf:
            - $ref: "#/components/schemas/Depth"
        buy:
          type: array
          items:
            $ref: "#/components/schemas/PricePoint"
        sell:
          type: array
          items:
            $ref: "#/components/schemas/PricePoint"
    RecentTrade:
      type: object
      properties:
        side:
          allOf:
            - $ref: "#/components/schemas/Side"
          description: Side of trade
        price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Price of trade
        size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Size of trade
        timestamp:
          type: number
          description: Trade timestamp
          example: 1592828815073
    UserTrade:
      type: object
      properties:
        contract_id:
          allOf:
            - $ref: "#/components/schemas/UUID"
        contract_symbol:
          allOf:
            - $ref: "#/components/schemas/ContractSymbol"

        side:
          allOf:
            - $ref: "#/components/schemas/Side"
          description: Side of trade
        role:
          allOf:
            - $ref: "#/components/schemas/TradeRole"
          description: Role of trade
        price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Price of trade
        size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Size of trade
        comission:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Comission of trade
        order_id:
          allOf:
            - $ref: "#/components/schemas/UUID"
          description: Unique order identifier
        timestamp:
          allOf:
            - $ref: "#/components/schemas/Timestamp"

    Position:
      type: object
      properties:
        contract_id:
          allOf:
            - $ref: "#/components/schemas/UUID"
        contract_symbol:
          allOf:
            - $ref: "#/components/schemas/ContractSymbol"
        mark_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Mark price
        liquidation_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Liquidation price
        price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Position entry price
        roe:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: ROE
        size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Position size, negative for short and positive for long
        unrealized_pnl:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description:  Unrealized profit and loss
        initial_margin:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Initial margin
        position_margin:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Position margin
        open_order_margin:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          description: Open order margin
        last_update_timestamp:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
          description: Last update timestamp
    Order:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
          description: Unique order identifier
        client_order_id:
          allOf:
            - $ref: "#/components/schemas/UUID"
          description: Client order identifier
        type:
          allOf:
            - $ref: "#/components/schemas/OrderType"
        side:
          allOf:
            - $ref: "#/components/schemas/Side"
        status:
          allOf:
            - $ref: "#/components/schemas/OrderStatus"
        limit_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "7891.33"
        average_fill_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "10173.82"
        stop_price:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "7891.30"
        size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "1.33"
        filled_size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.771"
        cancelled_size:
          allOf:
            - $ref: "#/components/schemas/Decimal"
          example: "0.12"
        time_in_force:
          allOf:
            - $ref: "#/components/schemas/TimeInForceResp"
        is_post_only:
          type: boolean
          default: false
        is_reduce_only:
          type: boolean
          default: false
        stop_order_type:
          allOf:
            - $ref: "#/components/schemas/StopOrderType"
        stop_trigger:
          allOf:
            - $ref: "#/components/schemas/StopOrderTrigger"
        contract_id:
          allOf:
            - $ref: "#/components/schemas/UUID"
        contract_symbol:
          allOf:
            - $ref: "#/components/schemas/ContractSymbol"
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
        last_update_timestamp:
          allOf:
            - $ref: "#/components/schemas/Timestamp"

  responses:
    Success:
      description: Success response
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum: [success]

    NotFound:
      description: Resource could not be found
      content:
        application/json:
          schema:
            type: object
            required:
              - type
            properties:
              status:
                type: string
                enum: [error]
              type:
                type: string
                enum: [not_found]
    Unauthorized:
      description: Request could not be authorized
      content:
        application/json:
          schema:
            type: object
            required:
              - type
            properties:
              status:
                type: string
                enum: [error]
              type:
                type: string
                enum: [unauthorized]
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            required:
              - type
            properties:
              status:
                type: string
                enum: [error]
              type:
                enum: [invalid_data]
    UnprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            type: object
            required:
              - type
            properties:
              status:
                type: string
                enum: [error]
              type:
                type: string
                enum: [rejected]
              reason:
                type: string
                description: Error explanation
